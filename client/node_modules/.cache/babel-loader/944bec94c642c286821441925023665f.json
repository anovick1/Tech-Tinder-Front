{"ast":null,"code":"import Client from './api';\nexport const SignInUser = async data => {\n  try {\n    const res = await Client.post('/auth/login', data);\n    localStorage.setItem('token', res.data.token);\n    return res.data.user;\n  } catch (error) {\n    throw error;\n  }\n};\n_c = SignInUser;\nexport const StayLogged = async data => {\n  try {\n    const res = await Client.post('/auth/staylogged', data);\n    localStorage.setItem('token', res.data.token);\n    return res.data.user;\n  } catch (error) {\n    throw error;\n  }\n};\n_c2 = StayLogged;\nexport const RegisterUser = async data => {\n  try {\n    const res = await Client.post('/auth/register', data);\n    return res.data;\n  } catch (error) {\n    throw error;\n  }\n};\n_c3 = RegisterUser;\nexport const CheckSession = async () => {\n  try {\n    // Checks if the current token if it exists is valid\n    const res = await Client.get('/auth/session');\n    return res.data;\n  } catch (error) {\n    throw error;\n  }\n};\n_c4 = CheckSession;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SignInUser\");\n$RefreshReg$(_c2, \"StayLogged\");\n$RefreshReg$(_c3, \"RegisterUser\");\n$RefreshReg$(_c4, \"CheckSession\");","map":{"version":3,"names":["Client","SignInUser","data","res","post","localStorage","setItem","token","user","error","StayLogged","RegisterUser","CheckSession","get"],"sources":["/Users/jason_mac/GA_SEIR/Unit3/GroupProject/Tech-Tinder-Front/client/src/services/Auth.js"],"sourcesContent":["import Client from './api'\n\nexport const SignInUser = async (data) => {\n  try {\n    const res = await Client.post('/auth/login', data)\n    localStorage.setItem('token', res.data.token)\n    return res.data.user\n  } catch (error) {\n    throw error\n  }\n}\nexport const StayLogged = async (data) => {\n  try {\n    const res = await Client.post('/auth/staylogged', data)\n    localStorage.setItem('token', res.data.token)\n    return res.data.user\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const RegisterUser = async (data) => {\n  try {\n    const res = await Client.post('/auth/register', data)\n    return res.data\n  } catch (error) {\n    throw error\n  }\n}\n\nexport const CheckSession = async () => {\n  try {\n    // Checks if the current token if it exists is valid\n    const res = await Client.get('/auth/session')\n    return res.data\n  } catch (error) {\n    throw error\n  }\n}\n"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,OAAnB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAP,IAAgB;EACxC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMH,MAAM,CAACI,IAAP,CAAY,aAAZ,EAA2BF,IAA3B,CAAlB;IACAG,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,GAAG,CAACD,IAAJ,CAASK,KAAvC;IACA,OAAOJ,GAAG,CAACD,IAAJ,CAASM,IAAhB;EACD,CAJD,CAIE,OAAOC,KAAP,EAAc;IACd,MAAMA,KAAN;EACD;AACF,CARM;KAAMR,U;AASb,OAAO,MAAMS,UAAU,GAAG,MAAOR,IAAP,IAAgB;EACxC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMH,MAAM,CAACI,IAAP,CAAY,kBAAZ,EAAgCF,IAAhC,CAAlB;IACAG,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,GAAG,CAACD,IAAJ,CAASK,KAAvC;IACA,OAAOJ,GAAG,CAACD,IAAJ,CAASM,IAAhB;EACD,CAJD,CAIE,OAAOC,KAAP,EAAc;IACd,MAAMA,KAAN;EACD;AACF,CARM;MAAMC,U;AAUb,OAAO,MAAMC,YAAY,GAAG,MAAOT,IAAP,IAAgB;EAC1C,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMH,MAAM,CAACI,IAAP,CAAY,gBAAZ,EAA8BF,IAA9B,CAAlB;IACA,OAAOC,GAAG,CAACD,IAAX;EACD,CAHD,CAGE,OAAOO,KAAP,EAAc;IACd,MAAMA,KAAN;EACD;AACF,CAPM;MAAME,Y;AASb,OAAO,MAAMC,YAAY,GAAG,YAAY;EACtC,IAAI;IACF;IACA,MAAMT,GAAG,GAAG,MAAMH,MAAM,CAACa,GAAP,CAAW,eAAX,CAAlB;IACA,OAAOV,GAAG,CAACD,IAAX;EACD,CAJD,CAIE,OAAOO,KAAP,EAAc;IACd,MAAMA,KAAN;EACD;AACF,CARM;MAAMG,Y"},"metadata":{},"sourceType":"module"}