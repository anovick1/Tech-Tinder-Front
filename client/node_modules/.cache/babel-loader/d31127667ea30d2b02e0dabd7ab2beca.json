{"ast":null,"code":"var _jsxFileName = \"/Users/jason_mac/GA_SEIR/Unit3/GroupProject/Tech-Tinder-Front/client/src/components/LikeDislikeButtons.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { LikeUser, ViewUser, GetLikedMe, GetUserLikes, GetViewedUsers } from '../services/UserServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LikeDislikeButtons = _ref => {\n  let {\n    setCount,\n    count,\n    currentUser,\n    displayedUser,\n    connections,\n    setConnections,\n    likes,\n    likedMe,\n    connect,\n    setConnect,\n    setLikedMe,\n    setLikes,\n    setViewedUsers,\n    topLikes\n  } = _ref;\n\n  const likeClick = async () => {\n    await LikeUser(currentUser.id, displayedUser.id);\n    await GetLikedMe(currentUser.id).then(res => setLikedMe(res[0].liked_me));\n    await GetUserLikes(currentUser.id).then(res => setLikes(res[0].likes));\n\n    for (let i = 0; i < likedMe.length; i++) {\n      if (likedMe[i].id === displayedUser.id) {\n        console.log(likedMe[i]);\n        setConnect(true);\n        let c = connections;\n        c.push(likedMe[i].id);\n        setConnections(c);\n        return;\n      }\n    }\n\n    if (!connect) {\n      console.log('here');\n      let likeCount = count + 1;\n      setCount(likeCount);\n    }\n  };\n\n  const dislikeClick = async () => {\n    ViewUser(currentUser.id, displayedUser.id);\n    await GetViewedUsers(currentUser.id).then(res => setViewedUsers(res[0].viewed));\n    let likeCount = count + 1;\n    setCount(likeCount);\n  };\n\n  return currentUser && !connect ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: topLikes ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://cdn-icons-png.flaticon.com/512/1216/1216686.png\",\n        id: \"like-icon\",\n        onClick: () => likeClick()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://cdn-icons-png.flaticon.com/128/1828/1828527.png\",\n        id: \"dislike-icon\",\n        onClick: () => dislikeClick()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://cdn-icons-png.flaticon.com/512/1216/1216686.png\",\n        id: \"like-icon\",\n        onClick: () => likeClick()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://cdn-icons-png.flaticon.com/128/1828/1828527.png\",\n        id: \"dislike-icon\",\n        onClick: () => dislikeClick()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this) : '';\n};\n\n_c = LikeDislikeButtons;\nexport default LikeDislikeButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"LikeDislikeButtons\");","map":{"version":3,"names":["React","useState","useEffect","LikeUser","ViewUser","GetLikedMe","GetUserLikes","GetViewedUsers","LikeDislikeButtons","setCount","count","currentUser","displayedUser","connections","setConnections","likes","likedMe","connect","setConnect","setLikedMe","setLikes","setViewedUsers","topLikes","likeClick","id","then","res","liked_me","i","length","console","log","c","push","likeCount","dislikeClick","viewed"],"sources":["/Users/jason_mac/GA_SEIR/Unit3/GroupProject/Tech-Tinder-Front/client/src/components/LikeDislikeButtons.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  LikeUser,\n  ViewUser,\n  GetLikedMe,\n  GetUserLikes,\n  GetViewedUsers\n} from '../services/UserServices'\n\nconst LikeDislikeButtons = ({\n  setCount,\n  count,\n  currentUser,\n  displayedUser,\n  connections,\n  setConnections,\n  likes,\n  likedMe,\n  connect,\n  setConnect,\n  setLikedMe,\n  setLikes,\n  setViewedUsers,\n  topLikes\n}) => {\n  const likeClick = async () => {\n    await LikeUser(currentUser.id, displayedUser.id)\n    await GetLikedMe(currentUser.id).then((res) => setLikedMe(res[0].liked_me))\n    await GetUserLikes(currentUser.id).then((res) => setLikes(res[0].likes))\n    for (let i = 0; i < likedMe.length; i++) {\n      if (likedMe[i].id === displayedUser.id) {\n        console.log(likedMe[i])\n        setConnect(true)\n        let c = connections\n        c.push(likedMe[i].id)\n        setConnections(c)\n        return\n      }\n    }\n    if (!connect) {\n      console.log('here')\n      let likeCount = count + 1\n      setCount(likeCount)\n    }\n  }\n\n  const dislikeClick = async () => {\n    ViewUser(currentUser.id, displayedUser.id)\n    await GetViewedUsers(currentUser.id).then((res) =>\n      setViewedUsers(res[0].viewed)\n    )\n    let likeCount = count + 1\n    setCount(likeCount)\n  }\n\n  return currentUser && !connect ? (\n    <div>\n    {topLikes ? (\n      <>\n      <img\n        src=\"https://cdn-icons-png.flaticon.com/512/1216/1216686.png\"\n        id=\"like-icon\"\n        onClick={() => likeClick()}\n      />\n      <img\n        src=\"https://cdn-icons-png.flaticon.com/128/1828/1828527.png\"\n        id=\"dislike-icon\"\n        onClick={() => dislikeClick()}\n      />\n    </>\n    ) : (\n      <>\n      <img\n        src=\"https://cdn-icons-png.flaticon.com/512/1216/1216686.png\"\n        id=\"like-icon\"\n        onClick={() => likeClick()}\n      />\n      <img\n        src=\"https://cdn-icons-png.flaticon.com/128/1828/1828527.png\"\n        id=\"dislike-icon\"\n        onClick={() => dislikeClick()}\n      />\n    </>\n    )\n    }\n    </div>\n  ) : (\n    ''\n  )\n}\n\nexport default LikeDislikeButtons\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,QADF,EAEEC,QAFF,EAGEC,UAHF,EAIEC,YAJF,EAKEC,cALF,QAMO,0BANP;;;;AAQA,MAAMC,kBAAkB,GAAG,QAerB;EAAA,IAfsB;IAC1BC,QAD0B;IAE1BC,KAF0B;IAG1BC,WAH0B;IAI1BC,aAJ0B;IAK1BC,WAL0B;IAM1BC,cAN0B;IAO1BC,KAP0B;IAQ1BC,OAR0B;IAS1BC,OAT0B;IAU1BC,UAV0B;IAW1BC,UAX0B;IAY1BC,QAZ0B;IAa1BC,cAb0B;IAc1BC;EAd0B,CAetB;;EACJ,MAAMC,SAAS,GAAG,YAAY;IAC5B,MAAMpB,QAAQ,CAACQ,WAAW,CAACa,EAAb,EAAiBZ,aAAa,CAACY,EAA/B,CAAd;IACA,MAAMnB,UAAU,CAACM,WAAW,CAACa,EAAb,CAAV,CAA2BC,IAA3B,CAAiCC,GAAD,IAASP,UAAU,CAACO,GAAG,CAAC,CAAD,CAAH,CAAOC,QAAR,CAAnD,CAAN;IACA,MAAMrB,YAAY,CAACK,WAAW,CAACa,EAAb,CAAZ,CAA6BC,IAA7B,CAAmCC,GAAD,IAASN,QAAQ,CAACM,GAAG,CAAC,CAAD,CAAH,CAAOX,KAAR,CAAnD,CAAN;;IACA,KAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,OAAO,CAACa,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;MACvC,IAAIZ,OAAO,CAACY,CAAD,CAAP,CAAWJ,EAAX,KAAkBZ,aAAa,CAACY,EAApC,EAAwC;QACtCM,OAAO,CAACC,GAAR,CAAYf,OAAO,CAACY,CAAD,CAAnB;QACAV,UAAU,CAAC,IAAD,CAAV;QACA,IAAIc,CAAC,GAAGnB,WAAR;QACAmB,CAAC,CAACC,IAAF,CAAOjB,OAAO,CAACY,CAAD,CAAP,CAAWJ,EAAlB;QACAV,cAAc,CAACkB,CAAD,CAAd;QACA;MACD;IACF;;IACD,IAAI,CAACf,OAAL,EAAc;MACZa,OAAO,CAACC,GAAR,CAAY,MAAZ;MACA,IAAIG,SAAS,GAAGxB,KAAK,GAAG,CAAxB;MACAD,QAAQ,CAACyB,SAAD,CAAR;IACD;EACF,CAnBD;;EAqBA,MAAMC,YAAY,GAAG,YAAY;IAC/B/B,QAAQ,CAACO,WAAW,CAACa,EAAb,EAAiBZ,aAAa,CAACY,EAA/B,CAAR;IACA,MAAMjB,cAAc,CAACI,WAAW,CAACa,EAAb,CAAd,CAA+BC,IAA/B,CAAqCC,GAAD,IACxCL,cAAc,CAACK,GAAG,CAAC,CAAD,CAAH,CAAOU,MAAR,CADV,CAAN;IAGA,IAAIF,SAAS,GAAGxB,KAAK,GAAG,CAAxB;IACAD,QAAQ,CAACyB,SAAD,CAAR;EACD,CAPD;;EASA,OAAOvB,WAAW,IAAI,CAACM,OAAhB,gBACL;IAAA,UACCK,QAAQ,gBACP;MAAA,wBACA;QACE,GAAG,EAAC,yDADN;QAEE,EAAE,EAAC,WAFL;QAGE,OAAO,EAAE,MAAMC,SAAS;MAH1B;QAAA;QAAA;QAAA;MAAA,QADA,eAMA;QACE,GAAG,EAAC,yDADN;QAEE,EAAE,EAAC,cAFL;QAGE,OAAO,EAAE,MAAMY,YAAY;MAH7B;QAAA;QAAA;QAAA;MAAA,QANA;IAAA,gBADO,gBAcP;MAAA,wBACA;QACE,GAAG,EAAC,yDADN;QAEE,EAAE,EAAC,WAFL;QAGE,OAAO,EAAE,MAAMZ,SAAS;MAH1B;QAAA;QAAA;QAAA;MAAA,QADA,eAMA;QACE,GAAG,EAAC,yDADN;QAEE,EAAE,EAAC,cAFL;QAGE,OAAO,EAAE,MAAMY,YAAY;MAH7B;QAAA;QAAA;QAAA;MAAA,QANA;IAAA;EAfF;IAAA;IAAA;IAAA;EAAA,QADK,GAgCL,EAhCF;AAkCD,CAhFD;;KAAM3B,kB;AAkFN,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}